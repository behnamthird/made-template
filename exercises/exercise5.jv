pipeline GTFSProcessor {
    DataFetcher
        -> ArchiveHandler
        -> FileSelector
        -> TextInterpreter
        -> CSVProcessor
        -> TableMapper
        -> DataStorer;

    block DataFetcher oftype HttpExtractor {
        url: "https://gtfs.rhoenenergie-bus.de/GTFS.zip";
    }

    block ArchiveHandler oftype ArchiveInterpreter {
        format: "zip";
    }

    block FileSelector oftype FilePicker {
        filePath: "D:\\programing\\jayvee\\made-template\\exercises\\GTFS\\stops.txt";
    }

    block TextInterpreter oftype TextFileInterpreter { }

    block CSVProcessor oftype CSVInterpreter {
        quoteCharacter: '"';
        escapeCharacter: '"';
    }

    block TableMapper oftype TableInterpreter {
        useHeader: true;
        columns: [
            "stop_id" oftype bigint,
            "stop_name" oftype string,
            "stop_lat" oftype Latitude,
            "stop_lon" oftype Longitude,
            "zone_id" oftype FilteredZone
        ];
    }

    block DataStorer oftype SQLiteLoader {
        dbTable: "stops";
        dbFile: "D:\\programing\\jayvee\\made-template\\exercises\\GTFS\\gtfs.sqlite";
    }
}

constraint LatitudeRange oftype RangeConstraint {
    lowerLimit: -90;
    upperLimit: 90;
}

valuetype Latitude oftype decimal {
    constraints: [LatitudeRange];
}

constraint LongitudeRange oftype RangeConstraint {
    lowerLimit: -90;
    upperLimit: 90;
}

valuetype Longitude oftype decimal {
    constraints: [LongitudeRange];
}

constraint ZoneConstraint oftype EqualityConstraint {
    allowedValue: 1925;
}

valuetype FilteredZone oftype integer {
    constraints: [ZoneConstraint];
}
